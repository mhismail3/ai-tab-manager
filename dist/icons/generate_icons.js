const fs=require("fs"),{createCanvas}=require("canvas"),sizes=[16,32,48,128];sizes.forEach((e=>{const o=createCanvas(e,e),n=o.getContext("2d"),a=n.createLinearGradient(0,0,e,e);a.addColorStop(0,"#4a6cf7"),a.addColorStop(1,"#6e48aa"),n.fillStyle=a,n.fillRect(0,0,e,e),n.fillStyle="#ffffff";const t=.7*e,l=.5*e,i=(e-t)/2,s=(e-l)/2,c=.1*e;n.beginPath(),n.moveTo(i+c,s),n.lineTo(i+t-c,s),n.arcTo(i+t,s,i+t,s+c,c),n.lineTo(i+t,s+l-c),n.arcTo(i+t,s+l,i+t-c,s+l,c),n.lineTo(i+c,s+l),n.arcTo(i,s+l,i,s+l-c,c),n.lineTo(i,s+c),n.arcTo(i,s,i+c,s,c),n.closePath(),n.fill(),e>=32&&(n.strokeStyle="rgba(255, 255, 255, 0.5)",n.lineWidth=.03*e,n.beginPath(),n.moveTo(i+.3*t,s+.3*l),n.lineTo(i+.7*t,s+.3*l),n.stroke(),n.beginPath(),n.moveTo(i+.3*t,s+.5*l),n.lineTo(i+.7*t,s+.5*l),n.stroke(),n.beginPath(),n.moveTo(i+.3*t,s+.7*l),n.lineTo(i+.7*t,s+.7*l),n.stroke());const r=o.toBuffer("image/png");fs.writeFileSync(`icons/icon${e}.png`,r),console.log(`Generated icon${e}.png`)})),console.log("All icons generated successfully.");